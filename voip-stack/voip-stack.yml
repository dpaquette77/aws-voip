---
Resources:

  SipRegistrarDnsRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z2ZYCU8574UYOA
      Name: sip.dpaquette.net
      Type: A
      TTL: 60
      ResourceRecords:
        - !GetAtt OpenSipsInstance.PublicIp


  MediaInternalDnsRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z0689688U89V3H9GEU9E
      Name: media.internal
      Type: A
      TTL: 60
      ResourceRecords:
        - !GetAtt MediaServerInstance.PrivateIp

  OpenSipsInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: '{{resolve:ssm:opensips-registrar-ami-latest:1}}'
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-stack:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !ImportValue security-stack:SipRegistrarSG
        - !ImportValue security-stack:SSHFromAnywhereSG
      IamInstanceProfile: !ImportValue security-stack:OpenSipsInstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            pip install boto3
            wget https://raw.githubusercontent.com/dpaquette77/aws-voip/master/voip-stack/opensips.cfg -O /usr/local/etc/opensips/opensips.cfg
            wget https://raw.githubusercontent.com/dpaquette77/aws-voip/master/voip-stack/configure_opensips_db_url.py -O /tmp/configure_opensips_db_url.py
            python /tmp/configure_opensips_db_url.py
            sed -i "s/PUBLIC_IP/`curl http://169.254.169.254/latest/meta-data/public-ipv4`/g" /usr/local/etc/opensips/opensips.cfg
            sed -i "s/PRIVATE_IP/`curl http://169.254.169.254/latest/meta-data/local-ipv4`/g" /usr/local/etc/opensips/opensips.cfg
            sed -i "s/RTPPROXY_IP/${RTPGatewayInstance.PrivateIp}/g" /usr/local/etc/opensips/opensips.cfg
            sed -i "s/RTPPROXY_PORT/7722/g" /usr/local/etc/opensips/opensips.cfg
            sed -i "s/ASTERISK_IP/media.internal/g" /usr/local/etc/opensips/opensips.cfg
            sed -i "s/ASTERISK_SIP_PORT/5060/g" /usr/local/etc/opensips/opensips.cfg
            /usr/local/sbin/opensipsctl start



  MediaServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: '{{resolve:ssm:asterisk-ami-latest:1}}'
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-stack:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !ImportValue security-stack:MediaServerSG
        - !ImportValue security-stack:SSHFromAnywhereSG
      IamInstanceProfile: !ImportValue security-stack:MediaServerInstanceProfile

      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            wget https://raw.githubusercontent.com/dpaquette77/aws-voip/master/voip-stack/sip.conf -O /etc/asterisk/sip.conf
            wget https://raw.githubusercontent.com/dpaquette77/aws-voip/master/voip-stack/extensions.conf -O /etc/asterisk/extensions.conf
            sed -i "s/OPENSIPS_IP/${OpenSipsInstance.PrivateIp}/g" /etc/asterisk/sip.conf
            systemctl restart asterisk


  RTPGatewayInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ba5191a708339a31
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-stack:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !ImportValue security-stack:RTPGatewaySG
        - !ImportValue security-stack:SSHFromAnywhereSG
      IamInstanceProfile: !ImportValue security-stack:RTPGatewayInstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            apt-get update -y
            apt-get -y install rtpproxy
            systemctl disable rtpproxy
            systemctl stop rtpproxy
            rtpproxy -l `curl http://169.254.169.254/latest/meta-data/local-ipv4` -s udp:`curl http://169.254.169.254/latest/meta-data/local-ipv4`:7722 -m 10000 -M 30000 -u rtpproxy rtpproxy
