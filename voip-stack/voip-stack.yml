---
Resources:
  AutomationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Path: "/"
      RoleName: AutomationServiceRole

  OpenSipsInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AutomationServiceRole

  SSHFromAnywhereSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue vpc-layer:MyVPC
      GroupDescription: Allow SIP from anywhere
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort : 22
          ToPort : 22
          CidrIp: 0.0.0.0/0

  SipRegistrarSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue vpc-layer:MyVPC
      GroupDescription: Allow SIP from anywhere
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort : 5060
          ToPort : 5060
          CidrIp: 0.0.0.0/0

  OpenSipsInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-056158f9b1df295ce
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-layer:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !Ref SipRegistrarSG
        - !Ref SSHFromAnywhereSG
      IamInstanceProfile: !Ref OpenSipsInstanceProfile



  MediaServerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AutomationServiceRole

  MediaServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue vpc-layer:MyVPC
      GroupDescription: Allow SIP from registrar, rtp from media gateway
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort : 5060
          ToPort : 5060
          SourceSecurityGroupId: !Ref SipRegistrarSG
        - IpProtocol: udp
          FromPort : 10000
          ToPort : 30000
          SourceSecurityGroupId: !Ref SipRegistrarSG

  MediaServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-008b9d1c9214fc412
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-layer:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !Ref MediaServerSG
        - !Ref SSHFromAnywhereSG
      IamInstanceProfile: !Ref MediaServerInstanceProfile




  RTPGatewayInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AutomationServiceRole

  RTPGatewaySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue vpc-layer:MyVPC
      GroupDescription: Allow RTP from anywhere
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort : 10000
          ToPort : 30000
          CidrIp: 0.0.0.0/0

  RTPGatewayInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ba5191a708339a31
      InstanceType: t2.micro
      SubnetId: !ImportValue vpc-layer:PublicSubnet1
      KeyName: 2020key
      SecurityGroupIds:
        - !Ref RTPGatewaySG
        - !Ref SSHFromAnywhereSG
      IamInstanceProfile: !Ref RTPGatewayInstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            apt-get update -y
            apt-get -y install rtpproxy
